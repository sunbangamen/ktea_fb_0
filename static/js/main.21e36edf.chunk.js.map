{"version":3,"sources":["services/firebase.js","helpers/database.js","pages/Chat.js","helpers/auth.js","pages/SignUp.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","pages/ChartOne.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","authService","auth","database","chartDB","ref","sendChart","data","push","place","value","timestamp","uid","getAllChart","Chat","useState","msg","setMsg","setChats","getChatList","chatList","chats","on","snapshot","forEach","row","val","getChats","handleSumbit","e","a","preventDefault","console","log","message","Date","now","currentUser","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","error","className","onSubmit","placeholder","onChange","target","type","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","logout","signOut","SignUp","setEmail","setPassword","handleOnChange","name","handleOnSubmit","to","Login","then","res","PublicRoute","Component","component","authenticated","rest","render","props","PrivateRoute","pathname","state","from","location","average","setAverage","average1","setAverage1","loaded","setLoaded","magAlert","setMagAlert","labels","datasets","label","fill","backgroundColor","borderColor","concat","Math","floor","value1","avr","arr","reduce","p","c","length","avgPlusData","avgMiusData","avgPlusData1","avgMiusData1","lastData","lastData1","sensor","sensor1","alertMsg","alert","slice","onClick","filter","options","legend","display","scales","yAxes","ticks","beginAtZero","width","height","React","memo","initialState","loading","reducer","action","result","App","useReducer","dispatch","onAuthStateChanged","user","path","ChartOne","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21e36edf.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/database\";\r\n// import \"firebase/firestore\";\r\n// import \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const database = firebase.database();\r\n// export const dbService = firebase.firestore();\r\n// export const storageService = firebase.storage();\r\n","import { database } from \"../services/firebase\";\r\nconst chartDB = database.ref(\"/chart\");\r\n\r\nexport const sendChat = (data) => {\r\n  return database.ref(\"chats\").push({\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n  });\r\n};\r\n\r\nexport const getChats = () => {\r\n  let chats = [];\r\n  database.ref(\"chat\").on(\"value\", (snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chats.push(row.val());\r\n    });\r\n  });\r\n  return chats;\r\n};\r\n\r\n// get Chart\r\nexport const sendChart = (data) => {\r\n  return database.ref(\"chart\").push({\r\n    place: data.place,\r\n    value: data.value,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n  });\r\n};\r\n// export const getChart = () => {\r\n//   let charts = [];\r\n//   database.ref(\"chart\").on(\"value\", (snapshot) => {\r\n//     snapshot.forEach((row) => {\r\n//       // charts.push(row.val());\r\n//       console.log(row.val());\r\n//     });\r\n//   });\r\n//   return charts;\r\n// };\r\nexport const getAllChart = () => {\r\n  return chartDB;\r\n};\r\n\r\nexport const getChart = (key) => {\r\n  return chartDB.child(key);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, database } from \"../services/firebase\";\r\nimport { sendChat, getChats } from \"../helpers/database\";\r\n\r\nconst Chat = () => {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [chats, setChats] = useState([]);\r\n\r\n  const getChatList = () => {\r\n    const chatList = getChats();\r\n    setChats(chatList);\r\n  };\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(msg);\r\n    try {\r\n      await sendChat({\r\n        message: msg,\r\n        timestamp: Date.now(),\r\n        uid: authService.currentUser.uid,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const scrolltoBottom = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"auto\",\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      database.ref(\"chats\").on(\"child_added\", getChatList);\r\n      database.ref(\"chats\").on(\"child_changed\", getChatList);\r\n      scrolltoBottom();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-top\">헤더</div>\r\n      <div className=\"chat-middle\">\r\n        <li className=\"chat-bubble send\">\r\n          <p>\r\n            하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~ 하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~\r\n            하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~\r\n          </p>\r\n          <span>13:30PM</span>\r\n        </li>\r\n        <li className=\"chat-bubble receive\">\r\n          <p>방가방가!!</p>\r\n          <span>13:31PM</span>\r\n        </li>\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <form onSubmit={handleSumbit}>\r\n          <input placeholder=\"내용을 입력하세요.\" value={msg} onChange={handleOnChange} />\r\n          <button type=\"submit\">전송</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { authService } from \"../services/firebase\";\r\n\r\nexport const signUp = (email, password) => {\r\n  return authService.createUserWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const signIn = (email, password) => {\r\n  return authService.signInWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const logout = () => {\r\n  return authService.signOut();\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/auth\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signUp(email, password);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"sign-container\">\r\n      <div className=\"sign-up-wrap\">\r\n        <h1 className=\"title\">회원가입</h1>\r\n        <form className=\"sign-up-form\" onSubmit={handleOnSubmit}>\r\n          <div>\r\n            <input type=\"email\" placeholder=\"이메일을 입력하세요.\" name=\"email\" value={email} onChange={handleOnChange} />\r\n          </div>\r\n          <div>\r\n            <input type=\"password\" placeholder=\"비밀번호를 입력하세요.\" name=\"password\" value={password} onChange={handleOnChange} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">회원가입</button>\r\n          </div>\r\n        </form>\r\n        <hr></hr>\r\n        <p>\r\n          이미 회원이신가? <Link to=\"/login\">로그인</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn } from \"../helpers/auth\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signIn(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"sign-container\">\r\n      <div className=\"sign-wrap\">\r\n        <h1 className=\"title\">로그인</h1>\r\n        <form className=\"sign-form\" onSubmit={handleOnSubmit}>\r\n          <div>\r\n            <input type=\"email\" placeholder=\"이메일을 입력하세요.\" name=\"email\" value={email} onChange={handleOnChange} />\r\n          </div>\r\n          <div>\r\n            <input type=\"password\" placeholder=\"비밀번호를 입력하세요.\" name=\"password\" value={password} onChange={handleOnChange} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">로그인</button>\r\n          </div>\r\n        </form>\r\n        <hr></hr>\r\n        <p>\r\n          회원이 아니신가? <Link to=\"/signup\">회원가입</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return <Route {...rest} render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to=\"/chart\" />)} />;\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return <Route {...rest} render={(props) => (authenticated === true ? <Component {...props} /> : <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />)} />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, database } from \"../services/firebase\";\r\nimport { sendChart, getChart, getAllChart, getChats } from \"../helpers/database\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport { keys } from \"@material-ui/core/styles/createBreakpoints\";\r\n\r\nconst Chat = () => {\r\n  // 현장명\r\n  const [msg, setMsg] = useState(\"\");\r\n  // Chart value\r\n  // const [charts, setCharts] = useState([]);\r\n  // const [charts1, setCharts1] = useState([]);\r\n  const [average, setAverage] = useState([]);\r\n  // Chart value1\r\n  const [average1, setAverage1] = useState([]);\r\n  // alert ,loaded\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [magAlert, setMagAlert] = useState(false);\r\n\r\n  //  https://github.com/reactchartjs/react-chartjs-2/issues/648\r\n  // const LineChart = () => <Line data={data} options={options} />\r\n  // const areEqual = (prevProps, nextProps) => true;\r\n  const data = {\r\n    labels: [\"5\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\", \"60\", \"65\", \"70\", \"75\", \"80\", \"85\", \"90\", \"95\", \"100\"],\r\n    //labels: [\"5\", \"10\", \"15\", \"20\", \"25\"],\r\n    datasets: [\r\n      {\r\n        label: \"# sensor\",\r\n        // data: [12, 19, 3, 5, 2, 3],\r\n        data: average,\r\n        fill: false,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n      },\r\n      {\r\n        label: \"# sensor1\",\r\n        // data: [12, 19, 3, 5, 2, 3],\r\n        data: average1,\r\n        fill: false,\r\n        backgroundColor: \"rgb(54, 162, 235)\",\r\n        borderColor: \"rgba(54, 162, 235, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false, // label 숨기기\r\n    },\r\n\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n\r\n    //maintainAspectRatio: false,\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const handleSumbit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(msg);\r\n    try {\r\n      await sendChart({\r\n        place: msg,\r\n        value: 0,\r\n        timestamp: Date.now(),\r\n        uid: authService.currentUser.uid,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllChart().on(\"child_changed\", (snapshot) => {\r\n      setAverage((average) => [...average.concat(Math.floor(snapshot.val().value))]);\r\n\r\n      console.log(\"change : \", snapshot.val().value);\r\n    });\r\n    getAllChart().on(\"child_changed\", (snapshot) => {\r\n      setAverage1((average) => [...average.concat(Math.floor(snapshot.val().value1))]);\r\n      console.log(\"change1 : \", snapshot.val().value1);\r\n    });\r\n  }, []);\r\n\r\n  // // 동시적용\r\n  // useEffect(() => {\r\n  //   getAllChart().on(\"value\", (snapshot) => {\r\n  //     let chartInfo = [];\r\n  //     snapshot.forEach((item) => {\r\n  //       let data = item.val();\r\n  //       chartInfo.push({\r\n  //         key: item.key,\r\n  //         place: data.place,\r\n  //         uid: data.uid,\r\n  //         value: data.value,\r\n  //         value1: data.value1,\r\n  //       });\r\n\r\n  //       setCharts((charts) => [...charts.concat(Math.floor(data.value))]);\r\n  //       setAverage((average) => [...average.concat(Math.floor(data.value))]);\r\n  //       // Chart value1\r\n  //       setAverage1((average) => [...average.concat(Math.floor(data.value1))]);\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  //console.log(\"charts배열값 : \", charts);\r\n  console.log(\"loaded : \", loaded);\r\n  // 배열의 평균 값\r\n  const avr = (arr) => arr.reduce((p, c) => p + c, 0) / arr.length;\r\n  // 총배열\r\n  console.log(\"average 총배열 : \", average);\r\n  console.log(\"average1 총배열 : \", average1);\r\n  console.log(\"평균값 : \", avr(average));\r\n  console.log(\"평균값 : \", avr(average1));\r\n  const avgPlusData = avr(average) + 5;\r\n  const avgMiusData = avr(average) - 5;\r\n  const avgPlusData1 = avr(average1) + 5;\r\n  const avgMiusData1 = avr(average1) - 5;\r\n  //console.log(avgData, \" : \", avr(average) + 5);\r\n  //console.log(\"배열마지막 값 : \", average[average.length - 1]);\r\n  const lastData = average[average.length - 1];\r\n  const lastData1 = average1[average1.length - 1];\r\n\r\n  const sensor = \"sensor\";\r\n  const sensor1 = \"sensor1\";\r\n  const alertMsg = (name) => {\r\n    setMagAlert(true);\r\n    alert(`${name}위치에 문제가 발생되었습니다.`);\r\n    //window.confirm(\"문제가 발생되었습니다.\");\r\n  };\r\n  if (avgMiusData > lastData) {\r\n    if (!magAlert) {\r\n      alertMsg(sensor);\r\n    } else {\r\n      console.log(\"문제발생\");\r\n    }\r\n  } else if (avgPlusData < lastData) {\r\n    console.log(\"문제 발생\");\r\n    if (!magAlert) {\r\n      alertMsg(sensor);\r\n    } else {\r\n      console.log(\"문제발생\");\r\n    }\r\n  } else {\r\n    console.log(\"정상측정\");\r\n    //setMagAlert(false);\r\n  }\r\n\r\n  if (avgMiusData1 > lastData1) {\r\n    if (!magAlert) {\r\n      alertMsg(sensor1);\r\n    } else {\r\n      console.log(\"문제발생\");\r\n    }\r\n  } else if (avgPlusData1 < lastData1) {\r\n    console.log(\"문제 발생\");\r\n    if (!magAlert) {\r\n      alertMsg(sensor1);\r\n    } else {\r\n      console.log(\"문제발생\");\r\n    }\r\n  } else {\r\n    console.log(\"정상측정\");\r\n    //setMagAlert(false);\r\n  }\r\n\r\n  // if (alertResult < maxlimit || alertResult > minlimit) {\r\n  //   //window.confirm(\"확인요청\");\r\n  // } else {\r\n  //   console.log(\"문제가 발생되었다!\");\r\n  // }\r\n  const handleStart = () => {\r\n    setLoaded(true);\r\n    setMagAlert(false);\r\n    setAverage(average.filter((arr) => arr === average));\r\n    setAverage1(average1.filter((arr) => arr === average1));\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setLoaded(false);\r\n    // setCharts([]);\r\n    setAverage([]);\r\n    setAverage1([]);\r\n  };\r\n\r\n  if (average[19]) {\r\n    //const index = 3;\r\n    setAverage((average) => [...average.slice(18)]);\r\n  }\r\n  if (average1[19]) {\r\n    //const index = 3;\r\n    setAverage1((average1) => [...average1.slice(18)]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <button onClick={logout}>로그아웃</button>\r\n        <form onSubmit={handleSumbit}>\r\n          <input placeholder=\"현장명을 입력하세요.\" value={msg} onChange={handleOnChange} />\r\n          <button type=\"submit\">전송</button>\r\n        </form>\r\n        <h1 className=\"title\">Line Chart</h1>\r\n      </div>\r\n      {loaded ? <button onClick={handleStop}>초기화</button> : <button onClick={handleStart}>측정시작</button>}\r\n      <Line data={data} options={options} width={100} height={50} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Chat);\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { authService } from \"./services/firebase\";\n\nimport Chat from \"./pages/Chat\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n// import LineChart from \"./pages/LineChart\";\nimport Chart from \"./pages/Chart\";\nimport ChartOne from \"./pages/ChartOne\";\n\nconst initialState = {\n  authenticated: false,\n  loading: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state, authenticated: action.result };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { authenticated } = state;\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/chat\" authenticated={authenticated} component={Chat} />\n        <PrivateRoute path=\"/chart\" authenticated={authenticated} component={ChartOne} />\n        <PublicRoute path=\"/signup\" authenticated={authenticated} component={SignUp} />\n        <PublicRoute path={[\"/\", \"/login\"]} authenticated={authenticated} component={Login} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}